{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PDL2",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#support"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.pdl2",
					"match": "\\b(if|IF|while|WHILE|for|FOR|THEN|SELECT|CASE)\\b"
				},
				{
					"name": "keyword.control.pdl2",
					"match": "\\b(else|ELSE|endif|ENDIF|endwhile|ENDWHILE|ednfor|ENDFOR|ENDSELECT)\\b"
				},
				{
					"name": "keyword.storage.modifier.pdl2",
					"match": "\\b(GLOBAL)\\b"
				},
				{
					"name": "keyword.other.pdl2",
					"match": "\\b(OF|EXPORTED|FROM|IMPORT|BEGIN|END|ENDCONDITION)\\b"
				},
				{
					"name": "keyword.other.pdl2",
					"match": "\\b(WAIT|DISABLE|DEACTIVATE|DELAY|ACTIVATE|DELAY|GOTO|HOLD|WITH|ADVANCE|TIL|SYNCMOVE|PAUSE|CYCLE|EXIT CYCLE|WAIT FOR|BYPASS)\\b"
				},
				{
					"name": "keyword.control.type.pdl2",
					"match": "\\b(PROGRAM|ROUTINE|CONDITION|VAR|CONST|TYPE)\\b"
				},
				{
					"name": "support.type.pdl2",
					"match": "(?i)\\b(INTEGER|REAL|BOOLEAN|STRING|ARRAY|VECTOR|POSITION|JOINTPOS|XTNDPOS|NODE|PATH|SEMAPHORE|TYPE|record|endrecord|RECORD|ENDRECORD|NODEDEF|ENDNODEDEF)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.pdl2",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.pdl2",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.character.pdl2",
					"match": "--.*$"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.pdl2",
					"match": "\\b-?\\d+(\\.\\d*)?([eE][+-]?\\d+)?\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.pdl2",
					"match": "\\b(TRUE|FALSE|ON|OFF)\\b"
				},
				{
					"name": "constant.language.pdl2",
					"match": "\\b(v|vrot|vlin|z)[0-9]{1,4}\\b"
				},
				{
					"name": "constant.language.pdl2",
					"match": "\\b(vmax|fine)\\b"
				}
			]
		},
		"support": {
			"patterns": [
				{
					"name": "support.variable.pdl2",
					"match": "(?i)\\b(DOUT|DIN|IN|OUT|AIN|AOUT|FMI|FMO|BIT|WORD)\\b"
				},
				{
					"name": "support.variable.pdl2",
					"match": "(?i)\\b(SYS_CALL_STS|frames|TOL_FINE|MOVE_TYPE|ARM)\\b"
				},
				{
					"name": "support.variable.pdl2",
					"match": "(?i)\\b(SDI|SDO|GI|GO|FDIN|FDOUT|HDIN|TIMER|TIMER_S|PROG_TIMER_xx)\\b"
				},
				{
					"name": "support.function.pdl2",
					"match": "(?i)\\b(MOVE TO|MOVE NEAR|MOVE AWAY|MOVE REALTIVE|MOVE ABOUT|MOVE BY|MOVE FOR|ENDMOVE|MOVE LINEAR|MOVE CIRCULAR|MOVE JOINT|MOVEFLY|CANCEL CURRENT|CANCEL CURRENT SEGMENT|CANCEL ALL SEGMENT|CANCEL|LOCK|LOCK ALL|SIGNAL SEGMENT|MOVE)\\b"
				},
				{
					"name": "support.function.pdl2",
					"match": "(?i)\\b(ABS|ACOS|ACT_POST|ARG_COUNT|ARG_GET_VALUE|ARG_INFO|ARG_SET_VALUE|ARM_COLL_THRS|ARM_COOP|ARM_GET_NODE|ARM_JNTP|ARM_MCOOP|ARM_MOVE|ARM_MOVE_ATVEL|ARM_NUM|ARM_PALLETIZING|ARM_POS|ARM_SET_NODE|ARM_SOFT|ARM_XTND|ARRAY_DIM1|ARRAY_DIM2|ASIN|ATAN2|AUX_COOP|AUX_DRIVES|AUX_SET|BIT_ASSIGN|BIT_CLEAR|BIT_FLIP|BIT_SET|BIT_TEST|CHR|CLOCK|COND_ENABLED|COND_ENBL_ALL|CONV_TRACK|COS|DATE|DIR_GET|DIR_SET|DRIVEON_DSBL|DV_CNTRL|DV_STATE|EOF|ERR_POST|ERR_STR|ERR_STR2|ERR_TRAP|ERR_TRAP_OFF|ERR_TRAP_ON|EXP|FL_BYTES_LEFT|FL_GET_POS|FL_SET_POS|FL_STATE|FLOW_MOD_ON|FLOW_MOD_OFF|HDIN_READ|HDIN_SET|IP_TO_STR|IR_SET|IR_SET_DIG|IR_SWITCH|IS_FLY|JNT|JNT_SET_TAR|JNTP_TO_POS|KEY_LOCK|LN|MEM_GET_PROGS|MEM_GET_TYPES|MEM_GET_VARS|MEM_SPACE|NODE_APP|NODE_DEL|NODE_GET_NAME|NODE_INS|NODE_SET_NAME|ON_JNT_SET|ON_JNT_SET_DIG|ON_POS|ON_POS_SET|ON_POS_SET_DIG|ON_TRAJ_SET|ON_TRAJ_SET_DIG|ORD|PATH_GET_NODE|PATH_LEN|POS|POS_COMP_IDL|POS_CORRECTION|POS_FRAME|POS_GET_APPR|POS_GET_CNFG|POS_GET_LOC|POS_GET_NORM|POS_GET_ORNT|POS_GET_RPY|POS_IDL_COMP|POS_IN_RANGE|POS_INV|POS_MIR|POS_SET_APPR|POS_SET_CNFG|POS_SET_LOC|POS_SET_NORM|POS_SET_ORNT|POS_SET_RPY|POS_SHIFT|POS_TO_JNTP|POS_XTRT|PROG_STATE|RANDOM|ROUND|SCRN_ADD|SCRN_CLEAR|SCRN_CREATE|SCRN_DEL|SCRN_GET|SCRN_REMOVE|SCRN_SET|SENSOR_GET_DATA|SENSOR_GET_OFST|SENSOR_SET_DATA|SENSOR_SET_OFST|SENSOR_TRK|SIN|SQRT|STANDBY|STR_CAT|STR_CODING|STR_CONVERT|STR_DEL|STR_EDIT|STR_GET_INT|STR_GET_REAL|STR_INS|STR_LEN|STR_LOC|STR_OVS|STR_SET_INT|STR_SET_REAL|STR_TO_IP|STR_TOKENS|STR_XTRT|SYS_ADJUST|SYS_CALL|SYS_SETUP|TABLE_ADD|TABLE_DEL|TAN|TREE_ADD|TREE_CLONE|TREE_CREATE|TREE_DEL|TREE_LOAD|TREE_NODE_INFO|TREE_NODE_CHILD|TREE_REMOVE|TREE_SAVE|TRUNC|VAR_CLONE|VAR_CREATE|VAR_INFO|VAR_LINK|VAR_LINKS|VAR_LINKSS|VAR_LINK_INFO|VAR_UNINIT|VAR_UNLINK|VAR_UNLINK_ALL|VEC|VOL_SPACE|WIN_ATTR|WIN_CLEAR|WIN_COLOR|WIN_CREATE|WIN_DEL|WIN_DISPLAY|WIN_GET_CRSR|WIN_LINE|WIN_LOAD|WIN_POPUP|WIN_REMOVE|WIN_SAVE|WIN_SEL|WIN_SET_CRSR|WIN_SIZE|WIN_STATE)\\b"
				}
			]
		}
	},
	"operators": {
		"patterns": [
			{
				"match": ":=",
				"name": "keyword.operator.assignment.pdl2"
			},
			{
				"match": "[*/+-]|\\b(MOD|DIV)\\b",
				"name": "keyword.operator.arithmetic.pdl2"
			},
			{
				"match": "(=(?<!:)|<=|>=|<>|<|>)",
				"name": "keyword.operator.comparison.pdl2"
			},
			{
				"match": "\\b(AND|OR|XOR|NOT)\\b",
				"name": "keyword.operator.logical.pdl2"
			}
		]
	},
	"scopeName": "source.pdl2"
}